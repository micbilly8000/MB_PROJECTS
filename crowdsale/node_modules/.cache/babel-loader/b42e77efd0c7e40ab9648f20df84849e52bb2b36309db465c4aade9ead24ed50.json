{"ast":null,"code":"var _jsxFileName = \"/home/micbilly/code/crowdsale/src/components/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { ethers } from 'ethers';\n\n// Components\nimport Navigation from './Navigation';\nimport Buy from './Buy';\nimport Progress from './Progress';\nimport Info from './Info';\nimport Loading from './Loading';\n\n// Artifacts\nimport CROWDSALE_ABI from '../abis/Crowdsale.json';\nimport TOKEN_ABI from '../abis/Token.json';\n\n// Config\nimport config from '../config.json';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [provider, setProvider] = useState(null);\n  const [Crowdsale, setCrowdsale] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [accountBalance, setAccountBalance] = useState(0);\n  const [price, setPrice] = useState(0);\n  const [maxTokens, setMaxTokens] = useState(0);\n  const [tokensSold, setTokensSold] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const loadBlockchainData = async () => {\n    // Intiantiate provider\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    setProvider(provider);\n\n    // Fetch Chain ID\n    const {\n      chainId\n    } = await provider.getNetwork();\n\n    // Intiantiate contracts\n    const token = new ethers.Contract(config[chainId].token.address, TOKEN_ABI, provider);\n    const crowdsale = new ethers.Contract(config[chainId].crowdsale.address, CROWDSALE_ABI, provider);\n    setCrowdsale(crowdsale);\n\n    // Fetch account\n    const accounts = await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n    const account = ethers.utils.getAddress(accounts[0]);\n    setAccount(account);\n\n    // Fetch account balance\n    const accountBalance = ethers.utils.formatUnits(await token.balanceOf(account), 18);\n    setAccountBalance(accountBalance);\n\n    // Fetch price\n    const price = ethers.utils.formatUnits(await crowdsale.price(), 18);\n    setPrice(price);\n\n    // Fetch max tokens\n    const maxTokens = ethers.utils.formatUnits(await crowdsale.maxTokens(), 18);\n    setMaxTokens(maxTokens);\n\n    // Fetch tokens sold\n    const tokensSold = ethers.utils.formatUnits(await crowdsale.tokensSold(), 18);\n    setTokensSold(tokensSold);\n    setIsLoading(false);\n  };\n  useEffect(() => {\n    if (isLoading) {\n      loadBlockchainData();\n    }\n  }, [isLoading]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"my-4 text-center\",\n      children: \"Introducing DApp Token!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Current Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 38\n        }, this), \" \", price, \" ETH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Buy, {\n        provider: provider,\n        price: price,\n        crowdsale: crowdsale,\n        setIsLoading: setIsLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Progress, {\n        maxTokens: maxTokens,\n        tokensSold: tokensSold\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), account && /*#__PURE__*/_jsxDEV(Info, {\n      account: account,\n      accountBalance: accountBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"e6PWyPPneX5BVkBUBtVWijTDTpg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Container","ethers","Navigation","Buy","Progress","Info","Loading","CROWDSALE_ABI","TOKEN_ABI","config","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","provider","setProvider","Crowdsale","setCrowdsale","account","setAccount","accountBalance","setAccountBalance","price","setPrice","maxTokens","setMaxTokens","tokensSold","setTokensSold","isLoading","setIsLoading","loadBlockchainData","providers","Web3Provider","window","ethereum","chainId","getNetwork","token","Contract","address","crowdsale","accounts","request","method","utils","getAddress","formatUnits","balanceOf","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/home/micbilly/code/crowdsale/src/components/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { ethers } from 'ethers'\r\n\r\n// Components\r\nimport Navigation from './Navigation';\r\nimport Buy from './Buy';\r\nimport Progress from './Progress';\r\nimport Info from './Info';\r\nimport Loading from './Loading';\r\n\r\n// Artifacts\r\nimport CROWDSALE_ABI from '../abis/Crowdsale.json'\r\nimport TOKEN_ABI from '../abis/Token.json'\r\n\r\n// Config\r\nimport config from '../config.json';\r\n\r\nfunction App() {\r\n  const [provider, setProvider] = useState(null)\r\n  const [Crowdsale, setCrowdsale] = useState(null)\r\n\r\n  const [account, setAccount] = useState(null)\r\n  const [accountBalance, setAccountBalance] = useState(0)\r\n\r\n  const [price, setPrice] = useState(0)\r\n  const [maxTokens, setMaxTokens] = useState(0)\r\n  const [tokensSold, setTokensSold] = useState(0)\r\n\r\n  const [isLoading, setIsLoading] = useState(true)\r\n\r\n  const loadBlockchainData = async () => {\r\n    // Intiantiate provider\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n    setProvider(provider)\r\n\r\n    // Fetch Chain ID\r\n    const { chainId } = await provider.getNetwork()\r\n\r\n    // Intiantiate contracts\r\n    const token = new ethers.Contract(config[chainId].token.address, TOKEN_ABI, provider)\r\n    const crowdsale = new ethers.Contract(config[chainId].crowdsale.address, CROWDSALE_ABI, provider)\r\n    setCrowdsale(crowdsale)\r\n\r\n    // Fetch account\r\n    const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n    const account = ethers.utils.getAddress(accounts[0])\r\n    setAccount(account)\r\n\r\n    // Fetch account balance\r\n    const accountBalance = ethers.utils.formatUnits(await token.balanceOf(account), 18)\r\n    setAccountBalance(accountBalance)\r\n\r\n    // Fetch price\r\n    const price = ethers.utils.formatUnits(await crowdsale.price(), 18)\r\n    setPrice(price)\r\n\r\n    // Fetch max tokens\r\n    const maxTokens = ethers.utils.formatUnits(await crowdsale.maxTokens(), 18)\r\n    setMaxTokens(maxTokens)\r\n\r\n    // Fetch tokens sold\r\n    const tokensSold = ethers.utils.formatUnits(await crowdsale.tokensSold(), 18)\r\n    setTokensSold(tokensSold)\r\n\r\n    setIsLoading(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      loadBlockchainData()\r\n    }\r\n  }, [isLoading])\r\n\r\n  return (\r\n    <Container>\r\n      <Navigation />\r\n\r\n      <h1 className='my-4 text-center'>Introducing DApp Token!</h1>\r\n\r\n      {isLoading ? (\r\n        <Loading />\r\n      ) : (\r\n        <>\r\n          <p className='text-center'><strong>Current Price:</strong> {price} ETH</p>\r\n          <Buy provider={provider} price={price} crowdsale={crowdsale} setIsLoading={setIsLoading} />\r\n          <Progress maxTokens={maxTokens} tokensSold={tokensSold} />\r\n        </>\r\n      )}\r\n\r\n      <hr />\r\n\r\n      {account && (\r\n        <Info account={account} accountBalance={accountBalance} />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}