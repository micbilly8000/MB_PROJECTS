{"ast":null,"code":"var _jsxFileName = \"/home/micbilly/code/crowdsale/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { ethers } from 'ethers';\nimport Navigation from './Navigation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  useEffect(() => {\n    const loadBlockchainData = async () => {\n      if (!window.ethereum) {\n        console.error('MetaMask not found');\n        return;\n      }\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      await provider.send('eth_requestAccounts', []);\n      console.log('Provider:', provider);\n      const signer = provider.getSigner();\n      console.log('Signer:', await signer.getAddress());\n    };\n    loadBlockchainData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","Container","ethers","Navigation","jsxDEV","_jsxDEV","App","_s","loadBlockchainData","window","ethereum","console","error","provider","providers","Web3Provider","send","log","signer","getSigner","getAddress","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/micbilly/code/crowdsale/src/components/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { ethers } from 'ethers';\r\nimport Navigation from './Navigation';\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    const loadBlockchainData = async () => {\r\n      if (!window.ethereum) {\r\n        console.error('MetaMask not found');\r\n        return;\r\n      }\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      await provider.send('eth_requestAccounts', []);\r\n      console.log('Provider:', provider);\r\n      const signer = provider.getSigner();\r\n      console.log('Signer:', await signer.getAddress());\r\n    };\r\n    loadBlockchainData();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Navigation />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACbP,SAAS,CAAC,MAAM;IACd,MAAMQ,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI,CAACC,MAAM,CAACC,QAAQ,EAAE;QACpBC,OAAO,CAACC,KAAK,CAAC,oBAAoB,CAAC;QACnC;MACF;MACA,MAAMC,QAAQ,GAAG,IAAIX,MAAM,CAACY,SAAS,CAACC,YAAY,CAACN,MAAM,CAACC,QAAQ,CAAC;MACnE,MAAMG,QAAQ,CAACG,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;MAC9CL,OAAO,CAACM,GAAG,CAAC,WAAW,EAAEJ,QAAQ,CAAC;MAClC,MAAMK,MAAM,GAAGL,QAAQ,CAACM,SAAS,CAAC,CAAC;MACnCR,OAAO,CAACM,GAAG,CAAC,SAAS,EAAE,MAAMC,MAAM,CAACE,UAAU,CAAC,CAAC,CAAC;IACnD,CAAC;IACDZ,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEH,OAAA,CAACJ,SAAS;IAAAoB,QAAA,eACRhB,OAAA,CAACF,UAAU;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEhB;AAAClB,EAAA,CArBQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAuBZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}